# -*- coding: utf-8 -*-
"""Untitled8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12dYIrWS74u-KGtPUr82xFaQRZLHrjWBP
"""

import pandas as pd

# Load dataset
df = pd.read_csv("Warehouse_and_Retail_Sales.csv")

# Drop missing values
df = df.dropna()

# Drop columns not suitable for modeling
df_model = df.drop(columns=['ITEM CODE', 'ITEM DESCRIPTION'])

# Encode categorical variables
df_encoded = pd.get_dummies(df_model, columns=['SUPPLIER', 'ITEM TYPE'], drop_first=True)

import seaborn as sns
import matplotlib.pyplot as plt

# Aggregate monthly retail sales
monthly_sales = df.groupby(['YEAR', 'MONTH'])['RETAIL SALES'].sum().reset_index()

# Plot
sns.lineplot(data=monthly_sales, x="MONTH", y="RETAIL SALES", hue="YEAR")
plt.title("Monthly Retail Sales Trend")
plt.xlabel("Month")
plt.ylabel("Total Retail Sales")
plt.show()

from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

# Aggregate numeric stats by supplier
supplier_data = df.groupby('SUPPLIER')[['RETAIL SALES', 'RETAIL TRANSFERS', 'WAREHOUSE SALES']].mean()

# Normalize features
scaler = StandardScaler()
supplier_scaled = scaler.fit_transform(supplier_data)

# KMeans clustering
kmeans = KMeans(n_clusters=3, random_state=0)
supplier_data['Cluster'] = kmeans.fit_predict(supplier_scaled)

# Display sample
print(supplier_data.head())

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Features and target
X = df_encoded.drop(['RETAIL SALES'], axis=1)
y = df_encoded['RETAIL SALES']

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train linear model
model = LinearRegression()
model.fit(X_train, y_train)

# Compute RMSE manually
mse = mean_squared_error(y_test, y_pred)
rmse = mse ** 0.5

print(f"RMSE: {rmse:.2f}")

